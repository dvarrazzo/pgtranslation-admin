#! /usr/bin/perl -w

# Prerequisites:
# Input files given as argument (e.g., *.po)
# set URL with -U option

use strict;

use File::Basename;
use Getopt::Std;
use POSIX qw(:math_h);
use I18N::LangTags::List;

our $QUALIFIED_CUTOFF = 80;

my %opts;
getopts('U:l:', \%opts) or die;
my $po_url = $opts{'U'} || 'po';
my $list_file = $opts{'l'};
open LIST, '>', $opts{'l'} if $list_file;

my $everything;
my $errors;
my $new;

if (!@ARGV) {
    die "gotta give me at least one file\n";
}

# read in counts

my @catalogs;
my %catalog_count;

foreach (@ARGV) {
    /(\w+).pot/ && do {
	my $catname = $1;

	push @catalogs, $catname;

	my $tmp = `LC_ALL=C msgfmt -o /dev/null -v $_ 2>&1`;
	$tmp =~ /(\d+) untranslated/ and $catalog_count{$catname} = $1;

	next;
    };

    /(\w+)-(\w+).po/ || next;
    my $catalogname = $1;
    my $lang = $2;

    my $tmp;
    if (-e "$_.old") {
	$tmp = `LC_ALL=C msgfmt -o /dev/null -v $_.old 2>&1`;
    } else {
	$tmp = `LC_ALL=C msgfmt -o /dev/null -v $_ 2>&1`;
	$new->{$catalogname}{$lang} = 1;
    }
    $tmp =~ /(\d+) translated/ and $everything->{"$catalogname"}{"$lang"} = $1;
    if (-f "$_.err") {
	$errors->{"$catalogname"}{"$lang"} = 1;
    }
}

# compute all distinct languages available
my @all_lang = ();

foreach my $catalog (@catalogs) {
    foreach my $lang (keys %{$everything->{$catalog}}) {
	if (not grep($_ eq $lang, @all_lang)) {
	    push @all_lang, $lang;
	}

        # Convert count to percentage here; can't do it above in case we
        # hadn't seen the pot file yet.
        $everything->{$catalog}{$lang} = floor($everything->{$catalog}{$lang}/$catalog_count{$catalog} * 100);
    }
}

@all_lang = sort @all_lang;

print "<div>\n";
my $date = `date -u +'%FT%TZ'`;
chomp $date;
print "<p>Last update: <span class='timestamp'>$date</span></p>\n";

print "<table border=\"1\" width=\"100%\" cellspacing=\"0\" cellpadding=\"1\">\n\n";
print "<colgroup span=\"1\" width=\"0*\" />\n";
print "<colgroup span=\"".scalar(@all_lang)."\" width=\"*\" />\n";
print "<colgroup span=\"1\" width=\"0*\" />\n";
print "<tr>\n";
print "<th></th>\n";
foreach (@all_lang) {
    my $c;
    ($c = $_) =~ tr/_/-/;
    print "<th><abbr title=\"".(I18N::LangTags::List::name($c) || '')."\">$_</abbr></th>\n";
}
print "<td align=\"center\">".scalar(@all_lang)."</td>\n";
print "</tr>\n\n";

my %langavg;

foreach my $catalog (sort @catalogs) {
    my @catavg;

    print "<tr>\n";

    print "<th align=\"left\">";
    print "<a href=\"$po_url/$catalog.pot\">$catalog</a>";
    print "<br /><small>(".$catalog_count{$catalog}." strings)</small>";
    print "</th>\n";

    foreach my $lang (@all_lang) {
	my $pct = $everything->{$catalog}{$lang};
	print "<td align=\"center\"";
	if ($errors->{"$catalog"}{"$lang"}) {
	    print " class='errorpo'";
        } elsif (defined $pct and int($pct) == 100) {
	    print " class='fullpo'";
        } elsif (defined $pct and $pct >= $QUALIFIED_CUTOFF) {
	    print " class='qualifiedpo'";
        }
	print ">";

	if (defined $pct and $pct > 0) {
	    if (!$new->{$catalog}{$lang}) {
	        printf "<a href=\"$po_url/$catalog-$lang.po\">%.0f</a>", $pct;

	        push @{$langavg{"$lang"}}, $pct;
	        push @catavg, $pct;
	    } else {
		printf "<a class='newpo' href=\"$po_url/$catalog-$lang.po\">%.0f</a>", $pct;
	    }

	    if ($errors->{"$catalog"}{"$lang"}) {
		print " <span class='error'>(<a href=\"$po_url/$catalog-$lang.po.err\">E</a>)</span>";
	    }
	} elsif ($errors->{"$catalog"}{"$lang"}) {
	    print " <span class='error'>(<a href=\"$po_url/$catalog-$lang.po.err\">E</a>)</span>";
	} else {
	    print "&#x00A0;";
	}
	print "</td>\n";

	print LIST "$catalog/$lang\n" if $list_file and defined $pct and $pct >= $QUALIFIED_CUTOFF;
    }

    print "<td align=\"center\">";
    printf "%d", scalar(@catavg);
    if (@catavg) {
	printf " (%.0f)", floor(list_sum(@catavg)/scalar(@catavg));
    }
    print "</td>\n";

    print "</tr>\n\n";
}

my @totalavg;
print "<tr>\n";
print "<td align=\"center\">". scalar(@catalogs) ."</td>\n";
foreach my $lang (@all_lang) {
    print "<td align=\"center\">";
    if (@{$langavg{$lang}}) {
	printf "%d (%.0f)", scalar(@{$langavg{$lang}}), floor(list_sum(@{$langavg{$lang}})/scalar(@{$langavg{$lang}}));
	push @totalavg, @{$langavg{$lang}};
    }
    print "</td>\n";
}

print "<td align=\"center\">";
printf "%d (%.0f)", scalar(@totalavg), floor(list_sum(@totalavg)/scalar(@totalavg));
print "</td>\n";

print "</tr>\n\n";

print "</table>\n";
print "</div>\n";

close LIST if $list_file;


sub list_sum {
    my $total;
    foreach (@_) {
	$total += $_;
    }
    return $total;
}
